import java.util.Arrays;

public class Arrays__Method__예제 {

	public static void main(String[] args) {
		
		int [] arr = {0,1,2,3,4};
		int [][] arr2D = {{11,12,13},{21,22,23}};
		
		System.out.println("arr="+Arrays.toString(arr));
		System.out.println("arr2D="+Arrays.deepToString(arr2D));
//		2차원 배열에 대한 함수로는 deepToString(),deepToEquals(),deepHashCode() 3가지 있다.
		
		int[] arr2 = Arrays.copyOf(arr, arr.length);//arr2에 arr의 배열을 arr.length 만큼 복사 
		int[] arr3 = Arrays.copyOf(arr, 3);
		int[] arr4 = Arrays.copyOf(arr, 7);
		int[] arr5 = Arrays.copyOfRange(arr, 2, 4); //arr배열을 index 2~3까지 복사 
		int[] arr6 = Arrays.copyOfRange(arr, 0, 7);
		
		System.out.println("arr2="+Arrays.toString(arr2));
		System.out.println("arr3="+Arrays.toString(arr3));
		System.out.println("arr4="+Arrays.toString(arr4));
		System.out.println("arr5="+Arrays.toString(arr5));
		System.out.println("arr6="+Arrays.toString(arr6));
		
		int[] arr7 = new int[5];
		Arrays.fill(arr7, 9);//arr7을 9로 채운다.
		System.out.println("arr7="+Arrays.toString(arr7));
		
		Arrays.setAll(arr7, i->(int)(Math.random()*6)+1);
		System.out.println("arr7="+Arrays.toString(arr7)); //랜덤으로 arr7 을 채운다.
		
		for(int i:arr7) {
			char[] graph = new char[i];//char 배열 생성 ㅁㅁㅁㅁㅁㅁㅁ graph가 생성한 char배열을 가르키고 있다.
			Arrays.fill(graph, '*');
			System.out.println(new String(graph)+i); //char[]배열을 String으로 바꾸기 String(char 배열)생성자 이용
		}											//String 배열을 char[]로 바꾸는 방법은 tocharArray()이용
		
		String[][] str2D = new String[][] {{"aaa","bbb"},{"AAA","BBB"}};
		String[][] str2D2 = new String[][] {{"aaa","bbb"},{"AAA","BBB"}};
		
		System.out.println(Arrays.equals(str2D, str2D2));
		System.out.println(Arrays.deepEquals(str2D, str2D2)); //2차원 배열은 deepEquals(,)사용
		
		
		char[] chArr = {'A','D','C','B','E'};
		
		System.out.println("chArr="+Arrays.toString(chArr));
		System.out.println("index of B ="+Arrays.binarySearch(chArr, 'B')); //binarySearch 정렬하지 않아서 잘못된 결과
		System.out.println("= After sorting=");
		Arrays.sort(chArr);
		System.out.println("chArr="+Arrays.toString(chArr));
		System.out.println("index of B ="+Arrays.binarySearch(chArr, 'B'));//정렬한 후 정확한 결과
	}

}
